"""
Django settings for VideoBase project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os
import firebase_admin
from firebase_admin import credentials
from firebase_admin import storage


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


firebase_config_path = os.path.join(BASE_DIR, 'firebase', 'secrets.json')
FIREBASE_STORAGE_BUCKET_NAME = 'videobase-49d63.appspot.com'
firebase_cred = credentials.Certificate(firebase_config_path)
firebase_admin.initialize_app(firebase_cred, {
    'storageBucket': FIREBASE_STORAGE_BUCKET_NAME
})

bucket = storage.bucket()

FIREBASE_CONFIG = {
    'apiKey': 'AIzaSyB9wB2fMvbxEJ34OD2_56pbdv1gtje16h0',
    'authDomain': 'videobase-49d63.firebaseapp.com',
    'projectId': 'videobase-49d63',
    'storageBucket': 'videobase-49d63.appspot.com',
    'messagingSenderId': '153125374697',
    'appId': '1:153125374697:web:caecd45a90a6aabdcbbe78',
    'measurementId': 'G-DBVSYEYVDF'
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&7n%8**hdl$d3p*o!s95z_c!k9z$r4y&%-o%&hz4wn#k7&(yu0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',
    'corsheaders',
    'app',
    'graphene_django',

]




MIDDLEWARE = [
    'app.middleware.RefreshTokenMiddleware',
    'app.middleware.CustomCookieMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'VideoBase.urls'

AUTH_USER_MODEL = 'app.CustomUser'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': [BASE_DIR / 'templates'], 
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': 'app.jinja2.environment',
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'VideoBase.wsgi.application'
SESSION_COOKIE_HTTPONLY = False
CSRF_COOKIE_HTTPONLY = False
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'xxjwbmhq',
        'USER': 'xxjwbmhq',
        'PASSWORD': 'Ooj1m0HCn5U7RRbwocfYJrWYZh3CSZQs',
        'HOST': 'cornelius.db.elephantsql.com',
        'PORT': '5432', 
    }
} 


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SECRET_KEY = 'verification_token'
# JWT_REFRESH_TOKEN_SECRET_KEY = 'refresh_token'

GRAPHENE = {
    'SCHEMA': 'app.schema.schema',
    "MIDDLEWARE": [
        "graphql_jwt.middleware.JSONWebTokenMiddleware",
    ],
}

AUTHENTICATION_BACKENDS = [
    "graphql_jwt.backends.JSONWebTokenBackend",
    "django.contrib.auth.backends.ModelBackend",
]

GRAPHQL_JWT = {
    "JWT_VERIFY_EXPIRATION": True,
    "JWT_LONG_RUNNING_REFRESH_TOKEN": True,
    "JWT_ALLOW_ARGUMENT": True,
    "JWT_COOKIE_SECURE": True,
    "JWT_AUTH_TOKEN_EXPIRATION_DELTA": timedelta(minutes=5),
    "JWT_REFRESH_TOKEN_EXPIRATION_DELTA": timedelta(days=7),
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'videobase78@gmail.com'
EMAIL_HOST_PASSWORD = 'bgvputyubkodvuwi'